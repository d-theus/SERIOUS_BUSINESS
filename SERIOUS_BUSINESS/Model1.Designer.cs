//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "OrderEmployee", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Order), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Employee), true)]
[assembly: EdmRelationshipAttribute("Model1", "StoreItem", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.ItemCategory), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Item))]
[assembly: EdmRelationshipAttribute("Model1", "CheckupOrRepairItem", "CheckupOrRepair", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.CheckupOrRepair), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Item))]
[assembly: EdmRelationshipAttribute("Model1", "OrderItem", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Order), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Item))]
[assembly: EdmRelationshipAttribute("Model1", "OrderCheckupOrRepair", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Order), "CheckupOrRepair", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.CheckupOrRepair))]
[assembly: EdmRelationshipAttribute("Model1", "OrderPrinting", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Order), "Printing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Printing))]
[assembly: EdmRelationshipAttribute("Model1", "ConsumerOrder", "Consumer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Consumer), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Order))]

#endregion

namespace SERIOUS_BUSINESS
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> OrderSet
        {
            get
            {
                if ((_OrderSet == null))
                {
                    _OrderSet = base.CreateObjectSet<Order>("OrderSet");
                }
                return _OrderSet;
            }
        }
        private ObjectSet<Order> _OrderSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> EmployeeSet
        {
            get
            {
                if ((_EmployeeSet == null))
                {
                    _EmployeeSet = base.CreateObjectSet<Employee>("EmployeeSet");
                }
                return _EmployeeSet;
            }
        }
        private ObjectSet<Employee> _EmployeeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Consumer> ConsumerSet
        {
            get
            {
                if ((_ConsumerSet == null))
                {
                    _ConsumerSet = base.CreateObjectSet<Consumer>("ConsumerSet");
                }
                return _ConsumerSet;
            }
        }
        private ObjectSet<Consumer> _ConsumerSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemCategory> ItemCategorySet
        {
            get
            {
                if ((_ItemCategorySet == null))
                {
                    _ItemCategorySet = base.CreateObjectSet<ItemCategory>("ItemCategorySet");
                }
                return _ItemCategorySet;
            }
        }
        private ObjectSet<ItemCategory> _ItemCategorySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> ItemSet
        {
            get
            {
                if ((_ItemSet == null))
                {
                    _ItemSet = base.CreateObjectSet<Item>("ItemSet");
                }
                return _ItemSet;
            }
        }
        private ObjectSet<Item> _ItemSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckupOrRepair> CheckupOrRepairSet
        {
            get
            {
                if ((_CheckupOrRepairSet == null))
                {
                    _CheckupOrRepairSet = base.CreateObjectSet<CheckupOrRepair>("CheckupOrRepairSet");
                }
                return _CheckupOrRepairSet;
            }
        }
        private ObjectSet<CheckupOrRepair> _CheckupOrRepairSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Printing> PrintingSet
        {
            get
            {
                if ((_PrintingSet == null))
                {
                    _PrintingSet = base.CreateObjectSet<Printing>("PrintingSet");
                }
                return _PrintingSet;
            }
        }
        private ObjectSet<Printing> _PrintingSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderSet(Order order)
        {
            base.AddObject("OrderSet", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeSet(Employee employee)
        {
            base.AddObject("EmployeeSet", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConsumerSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConsumerSet(Consumer consumer)
        {
            base.AddObject("ConsumerSet", consumer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemCategorySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemCategorySet(ItemCategory itemCategory)
        {
            base.AddObject("ItemCategorySet", itemCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemSet(Item item)
        {
            base.AddObject("ItemSet", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CheckupOrRepairSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheckupOrRepairSet(CheckupOrRepair checkupOrRepair)
        {
            base.AddObject("CheckupOrRepairSet", checkupOrRepair);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrintingSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrintingSet(Printing printing)
        {
            base.AddObject("PrintingSet", printing);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="CheckupOrRepair")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckupOrRepair : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CheckupOrRepair object.
        /// </summary>
        /// <param name="orderID">Initial value of the orderID property.</param>
        /// <param name="isCheckupNeeded">Initial value of the isCheckupNeeded property.</param>
        /// <param name="isRepairNeeded">Initial value of the isRepairNeeded property.</param>
        /// <param name="servicePrice">Initial value of the servicePrice property.</param>
        public static CheckupOrRepair CreateCheckupOrRepair(global::System.Int32 orderID, global::System.String isCheckupNeeded, global::System.String isRepairNeeded, global::System.String servicePrice)
        {
            CheckupOrRepair checkupOrRepair = new CheckupOrRepair();
            checkupOrRepair.orderID = orderID;
            checkupOrRepair.isCheckupNeeded = isCheckupNeeded;
            checkupOrRepair.isRepairNeeded = isRepairNeeded;
            checkupOrRepair.servicePrice = servicePrice;
            return checkupOrRepair;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderID
        {
            get
            {
                return _orderID;
            }
            set
            {
                if (_orderID != value)
                {
                    OnorderIDChanging(value);
                    ReportPropertyChanging("orderID");
                    _orderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("orderID");
                    OnorderIDChanged();
                }
            }
        }
        private global::System.Int32 _orderID;
        partial void OnorderIDChanging(global::System.Int32 value);
        partial void OnorderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String isCheckupNeeded
        {
            get
            {
                return _isCheckupNeeded;
            }
            set
            {
                OnisCheckupNeededChanging(value);
                ReportPropertyChanging("isCheckupNeeded");
                _isCheckupNeeded = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("isCheckupNeeded");
                OnisCheckupNeededChanged();
            }
        }
        private global::System.String _isCheckupNeeded;
        partial void OnisCheckupNeededChanging(global::System.String value);
        partial void OnisCheckupNeededChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String isRepairNeeded
        {
            get
            {
                return _isRepairNeeded;
            }
            set
            {
                OnisRepairNeededChanging(value);
                ReportPropertyChanging("isRepairNeeded");
                _isRepairNeeded = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("isRepairNeeded");
                OnisRepairNeededChanged();
            }
        }
        private global::System.String _isRepairNeeded;
        partial void OnisRepairNeededChanging(global::System.String value);
        partial void OnisRepairNeededChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String servicePrice
        {
            get
            {
                return _servicePrice;
            }
            set
            {
                OnservicePriceChanging(value);
                ReportPropertyChanging("servicePrice");
                _servicePrice = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("servicePrice");
                OnservicePriceChanged();
            }
        }
        private global::System.String _servicePrice;
        partial void OnservicePriceChanging(global::System.String value);
        partial void OnservicePriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CheckupOrRepairItem", "Item")]
        public EntityCollection<Item> Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("Model1.CheckupOrRepairItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("Model1.CheckupOrRepairItem", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderCheckupOrRepair", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderCheckupOrRepair", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderCheckupOrRepair", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderCheckupOrRepair", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("Model1.OrderCheckupOrRepair", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Consumer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Consumer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Consumer object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="phone">Initial value of the phone property.</param>
        /// <param name="email">Initial value of the email property.</param>
        public static Consumer CreateConsumer(global::System.String name, global::System.String phone, global::System.String email)
        {
            Consumer consumer = new Consumer();
            consumer.name = name;
            consumer.phone = phone;
            consumer.email = email;
            return consumer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnnameChanging(value);
                    ReportPropertyChanging("name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("name");
                    OnnameChanged();
                }
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                if (_phone != value)
                {
                    OnphoneChanging(value);
                    ReportPropertyChanging("phone");
                    _phone = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("phone");
                    OnphoneChanged();
                }
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ConsumerOrder", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("Model1.ConsumerOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("Model1.ConsumerOrder", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="apptment">Initial value of the apptment property.</param>
        /// <param name="login">Initial value of the login property.</param>
        /// <param name="password">Initial value of the password property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.String name, global::System.String apptment, global::System.String login, global::System.String password)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.name = name;
            employee.apptment = apptment;
            employee.login = login;
            employee.password = password;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String apptment
        {
            get
            {
                return _apptment;
            }
            set
            {
                OnapptmentChanging(value);
                ReportPropertyChanging("apptment");
                _apptment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("apptment");
                OnapptmentChanged();
            }
        }
        private global::System.String _apptment;
        partial void OnapptmentChanging(global::System.String value);
        partial void OnapptmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String login
        {
            get
            {
                return _login;
            }
            set
            {
                OnloginChanging(value);
                ReportPropertyChanging("login");
                _login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("login");
                OnloginChanged();
            }
        }
        private global::System.String _login;
        partial void OnloginChanging(global::System.String value);
        partial void OnloginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderEmployee", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderEmployee", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderEmployee", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderEmployee", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("Model1.OrderEmployee", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="designation">Initial value of the designation property.</param>
        /// <param name="purchasePrice">Initial value of the purchasePrice property.</param>
        /// <param name="salePrice">Initial value of the salePrice property.</param>
        /// <param name="storeResidue">Initial value of the storeResidue property.</param>
        /// <param name="demand">Initial value of the demand property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String designation, global::System.Double purchasePrice, global::System.Double salePrice, global::System.Int32 storeResidue, global::System.String demand)
        {
            Item item = new Item();
            item.Id = id;
            item.designation = designation;
            item.purchasePrice = purchasePrice;
            item.salePrice = salePrice;
            item.storeResidue = storeResidue;
            item.demand = demand;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String designation
        {
            get
            {
                return _designation;
            }
            set
            {
                OndesignationChanging(value);
                ReportPropertyChanging("designation");
                _designation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("designation");
                OndesignationChanged();
            }
        }
        private global::System.String _designation;
        partial void OndesignationChanging(global::System.String value);
        partial void OndesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double purchasePrice
        {
            get
            {
                return _purchasePrice;
            }
            set
            {
                OnpurchasePriceChanging(value);
                ReportPropertyChanging("purchasePrice");
                _purchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("purchasePrice");
                OnpurchasePriceChanged();
            }
        }
        private global::System.Double _purchasePrice;
        partial void OnpurchasePriceChanging(global::System.Double value);
        partial void OnpurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double salePrice
        {
            get
            {
                return _salePrice;
            }
            set
            {
                OnsalePriceChanging(value);
                ReportPropertyChanging("salePrice");
                _salePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salePrice");
                OnsalePriceChanged();
            }
        }
        private global::System.Double _salePrice;
        partial void OnsalePriceChanging(global::System.Double value);
        partial void OnsalePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 storeResidue
        {
            get
            {
                return _storeResidue;
            }
            set
            {
                OnstoreResidueChanging(value);
                ReportPropertyChanging("storeResidue");
                _storeResidue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("storeResidue");
                OnstoreResidueChanged();
            }
        }
        private global::System.Int32 _storeResidue;
        partial void OnstoreResidueChanging(global::System.Int32 value);
        partial void OnstoreResidueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String demand
        {
            get
            {
                return _demand;
            }
            set
            {
                OndemandChanging(value);
                ReportPropertyChanging("demand");
                _demand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("demand");
                OndemandChanged();
            }
        }
        private global::System.String _demand;
        partial void OndemandChanging(global::System.String value);
        partial void OndemandChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "StoreItem", "Store")]
        public ItemCategory Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.StoreItem", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.StoreItem", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemCategory> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.StoreItem", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemCategory>("Model1.StoreItem", "Store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "CheckupOrRepairItem", "CheckupOrRepair")]
        public CheckupOrRepair CheckupOrRepair
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckupOrRepair>("Model1.CheckupOrRepairItem", "CheckupOrRepair").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckupOrRepair>("Model1.CheckupOrRepairItem", "CheckupOrRepair").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CheckupOrRepair> CheckupOrRepairReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckupOrRepair>("Model1.CheckupOrRepairItem", "CheckupOrRepair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CheckupOrRepair>("Model1.CheckupOrRepairItem", "CheckupOrRepair", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderItem", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderItem", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderItem", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderItem", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("Model1.OrderItem", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="ItemCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemCategory object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static ItemCategory CreateItemCategory(global::System.String name)
        {
            ItemCategory itemCategory = new ItemCategory();
            itemCategory.Name = name;
            return itemCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "StoreItem", "Item")]
        public EntityCollection<Item> Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("Model1.StoreItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("Model1.StoreItem", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="status">Initial value of the status property.</param>
        public static Order CreateOrder(global::System.Int32 id, global::System.String date, global::System.String status)
        {
            Order order = new Order();
            order.Id = id;
            order.date = date;
            order.status = status;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.String _date;
        partial void OndateChanging(global::System.String value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderEmployee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Model1.OrderEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Model1.OrderEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Model1.OrderEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("Model1.OrderEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderItem", "Item")]
        public EntityCollection<Item> Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("Model1.OrderItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("Model1.OrderItem", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderCheckupOrRepair", "CheckupOrRepair")]
        public EntityCollection<CheckupOrRepair> CheckupOrRepair
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CheckupOrRepair>("Model1.OrderCheckupOrRepair", "CheckupOrRepair");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CheckupOrRepair>("Model1.OrderCheckupOrRepair", "CheckupOrRepair", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderPrinting", "Printing")]
        public EntityCollection<Printing> Printing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Printing>("Model1.OrderPrinting", "Printing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Printing>("Model1.OrderPrinting", "Printing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ConsumerOrder", "Consumer")]
        public Consumer Consumer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Consumer> ConsumerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Printing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Printing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Printing object.
        /// </summary>
        /// <param name="orderID">Initial value of the orderID property.</param>
        /// <param name="count">Initial value of the count property.</param>
        /// <param name="format">Initial value of the format property.</param>
        /// <param name="isEditNeeded">Initial value of the isEditNeeded property.</param>
        public static Printing CreatePrinting(global::System.Int32 orderID, global::System.Int32 count, global::System.String format, global::System.Boolean isEditNeeded)
        {
            Printing printing = new Printing();
            printing.orderID = orderID;
            printing.count = count;
            printing.format = format;
            printing.isEditNeeded = isEditNeeded;
            return printing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderID
        {
            get
            {
                return _orderID;
            }
            set
            {
                if (_orderID != value)
                {
                    OnorderIDChanging(value);
                    ReportPropertyChanging("orderID");
                    _orderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("orderID");
                    OnorderIDChanged();
                }
            }
        }
        private global::System.Int32 _orderID;
        partial void OnorderIDChanging(global::System.Int32 value);
        partial void OnorderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private global::System.Int32 _count;
        partial void OncountChanging(global::System.Int32 value);
        partial void OncountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String format
        {
            get
            {
                return _format;
            }
            set
            {
                OnformatChanging(value);
                ReportPropertyChanging("format");
                _format = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("format");
                OnformatChanged();
            }
        }
        private global::System.String _format;
        partial void OnformatChanging(global::System.String value);
        partial void OnformatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isEditNeeded
        {
            get
            {
                return _isEditNeeded;
            }
            set
            {
                OnisEditNeededChanging(value);
                ReportPropertyChanging("isEditNeeded");
                _isEditNeeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isEditNeeded");
                OnisEditNeededChanged();
            }
        }
        private global::System.Boolean _isEditNeeded;
        partial void OnisEditNeededChanging(global::System.Boolean value);
        partial void OnisEditNeededChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderPrinting", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderPrinting", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderPrinting", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderPrinting", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("Model1.OrderPrinting", "Order", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
