//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "StoreItem", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.ItemCategory), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Item), true)]
[assembly: EdmRelationshipAttribute("Model1", "ConsumerOrder", "Consumer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Consumer), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Order), true)]
[assembly: EdmRelationshipAttribute("Model1", "EmployeeOrder", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Employee), "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Order), true)]
[assembly: EdmRelationshipAttribute("Model1", "OrderService", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Order), "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Position), true)]
[assembly: EdmRelationshipAttribute("Model1", "AppointmentEmployee", "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Appointment), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Employee), true)]
[assembly: EdmRelationshipAttribute("Model1", "ServiceItem", "Service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.Position), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.Item), true)]
[assembly: EdmRelationshipAttribute("Model1", "ItemCategoryItemParameter", "ItemCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SERIOUS_BUSINESS.ItemCategory), "ItemParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SERIOUS_BUSINESS.ItemParameter), true)]

#endregion

namespace SERIOUS_BUSINESS
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> OrderSet
        {
            get
            {
                if ((_OrderSet == null))
                {
                    _OrderSet = base.CreateObjectSet<Order>("OrderSet");
                }
                return _OrderSet;
            }
        }
        private ObjectSet<Order> _OrderSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> EmployeeSet
        {
            get
            {
                if ((_EmployeeSet == null))
                {
                    _EmployeeSet = base.CreateObjectSet<Employee>("EmployeeSet");
                }
                return _EmployeeSet;
            }
        }
        private ObjectSet<Employee> _EmployeeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Consumer> ConsumerSet
        {
            get
            {
                if ((_ConsumerSet == null))
                {
                    _ConsumerSet = base.CreateObjectSet<Consumer>("ConsumerSet");
                }
                return _ConsumerSet;
            }
        }
        private ObjectSet<Consumer> _ConsumerSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemCategory> ItemCategorySet
        {
            get
            {
                if ((_ItemCategorySet == null))
                {
                    _ItemCategorySet = base.CreateObjectSet<ItemCategory>("ItemCategorySet");
                }
                return _ItemCategorySet;
            }
        }
        private ObjectSet<ItemCategory> _ItemCategorySet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> ItemSet
        {
            get
            {
                if ((_ItemSet == null))
                {
                    _ItemSet = base.CreateObjectSet<Item>("ItemSet");
                }
                return _ItemSet;
            }
        }
        private ObjectSet<Item> _ItemSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> PositionSet
        {
            get
            {
                if ((_PositionSet == null))
                {
                    _PositionSet = base.CreateObjectSet<Position>("PositionSet");
                }
                return _PositionSet;
            }
        }
        private ObjectSet<Position> _PositionSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> AppointmentSet
        {
            get
            {
                if ((_AppointmentSet == null))
                {
                    _AppointmentSet = base.CreateObjectSet<Appointment>("AppointmentSet");
                }
                return _AppointmentSet;
            }
        }
        private ObjectSet<Appointment> _AppointmentSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemParameter> ItemParameterSet
        {
            get
            {
                if ((_ItemParameterSet == null))
                {
                    _ItemParameterSet = base.CreateObjectSet<ItemParameter>("ItemParameterSet");
                }
                return _ItemParameterSet;
            }
        }
        private ObjectSet<ItemParameter> _ItemParameterSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderSet(Order order)
        {
            base.AddObject("OrderSet", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeSet(Employee employee)
        {
            base.AddObject("EmployeeSet", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConsumerSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConsumerSet(Consumer consumer)
        {
            base.AddObject("ConsumerSet", consumer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemCategorySet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemCategorySet(ItemCategory itemCategory)
        {
            base.AddObject("ItemCategorySet", itemCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemSet(Item item)
        {
            base.AddObject("ItemSet", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PositionSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositionSet(Position position)
        {
            base.AddObject("PositionSet", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppointmentSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointmentSet(Appointment appointment)
        {
            base.AddObject("AppointmentSet", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemParameterSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemParameterSet(ItemParameter itemParameter)
        {
            base.AddObject("ItemParameterSet", itemParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="accessModifier">Initial value of the accessModifier property.</param>
        public static Appointment CreateAppointment(global::System.Int32 id, global::System.Int16 accessModifier)
        {
            Appointment appointment = new Appointment();
            appointment.id = id;
            appointment.accessModifier = accessModifier;
            return appointment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 accessModifier
        {
            get
            {
                return _accessModifier;
            }
            set
            {
                OnaccessModifierChanging(value);
                ReportPropertyChanging("accessModifier");
                _accessModifier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("accessModifier");
                OnaccessModifierChanged();
            }
        }
        private global::System.Int16 _accessModifier;
        partial void OnaccessModifierChanging(global::System.Int16 value);
        partial void OnaccessModifierChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "AppointmentEmployee", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("Model1.AppointmentEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("Model1.AppointmentEmployee", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Consumer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Consumer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Consumer object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="phone">Initial value of the phone property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static Consumer CreateConsumer(global::System.String name, global::System.String phone, global::System.String email, global::System.Int32 id)
        {
            Consumer consumer = new Consumer();
            consumer.name = name;
            consumer.phone = phone;
            consumer.email = email;
            consumer.id = id;
            return consumer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ConsumerOrder", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("Model1.ConsumerOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("Model1.ConsumerOrder", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="login">Initial value of the login property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="aptID">Initial value of the aptID property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.String name, global::System.String login, global::System.String password, global::System.Int32 aptID)
        {
            Employee employee = new Employee();
            employee.id = id;
            employee.name = name;
            employee.login = login;
            employee.password = password;
            employee.aptID = aptID;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String login
        {
            get
            {
                return _login;
            }
            set
            {
                OnloginChanging(value);
                ReportPropertyChanging("login");
                _login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("login");
                OnloginChanged();
            }
        }
        private global::System.String _login;
        partial void OnloginChanging(global::System.String value);
        partial void OnloginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 aptID
        {
            get
            {
                return _aptID;
            }
            set
            {
                OnaptIDChanging(value);
                ReportPropertyChanging("aptID");
                _aptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("aptID");
                OnaptIDChanged();
            }
        }
        private global::System.Int32 _aptID;
        partial void OnaptIDChanging(global::System.Int32 value);
        partial void OnaptIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EmployeeOrder", "Order")]
        public EntityCollection<Order> Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("Model1.EmployeeOrder", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("Model1.EmployeeOrder", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "AppointmentEmployee", "Appointment")]
        public Appointment Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("Model1.AppointmentEmployee", "Appointment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("Model1.AppointmentEmployee", "Appointment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> AppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("Model1.AppointmentEmployee", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("Model1.AppointmentEmployee", "Appointment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="designation">Initial value of the designation property.</param>
        /// <param name="purchasePrice">Initial value of the purchasePrice property.</param>
        /// <param name="salePrice">Initial value of the salePrice property.</param>
        /// <param name="storeResidue">Initial value of the storeResidue property.</param>
        /// <param name="demand">Initial value of the demand property.</param>
        /// <param name="catID">Initial value of the catID property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String designation, global::System.Double purchasePrice, global::System.Double salePrice, global::System.Int32 storeResidue, global::System.String demand, global::System.Int32 catID)
        {
            Item item = new Item();
            item.id = id;
            item.designation = designation;
            item.purchasePrice = purchasePrice;
            item.salePrice = salePrice;
            item.storeResidue = storeResidue;
            item.demand = demand;
            item.catID = catID;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String designation
        {
            get
            {
                return _designation;
            }
            set
            {
                OndesignationChanging(value);
                ReportPropertyChanging("designation");
                _designation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("designation");
                OndesignationChanged();
            }
        }
        private global::System.String _designation;
        partial void OndesignationChanging(global::System.String value);
        partial void OndesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double purchasePrice
        {
            get
            {
                return _purchasePrice;
            }
            set
            {
                OnpurchasePriceChanging(value);
                ReportPropertyChanging("purchasePrice");
                _purchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("purchasePrice");
                OnpurchasePriceChanged();
            }
        }
        private global::System.Double _purchasePrice;
        partial void OnpurchasePriceChanging(global::System.Double value);
        partial void OnpurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double salePrice
        {
            get
            {
                return _salePrice;
            }
            set
            {
                OnsalePriceChanging(value);
                ReportPropertyChanging("salePrice");
                _salePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("salePrice");
                OnsalePriceChanged();
            }
        }
        private global::System.Double _salePrice;
        partial void OnsalePriceChanging(global::System.Double value);
        partial void OnsalePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 storeResidue
        {
            get
            {
                return _storeResidue;
            }
            set
            {
                OnstoreResidueChanging(value);
                ReportPropertyChanging("storeResidue");
                _storeResidue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("storeResidue");
                OnstoreResidueChanged();
            }
        }
        private global::System.Int32 _storeResidue;
        partial void OnstoreResidueChanging(global::System.Int32 value);
        partial void OnstoreResidueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String demand
        {
            get
            {
                return _demand;
            }
            set
            {
                OndemandChanging(value);
                ReportPropertyChanging("demand");
                _demand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("demand");
                OndemandChanged();
            }
        }
        private global::System.String _demand;
        partial void OndemandChanging(global::System.String value);
        partial void OndemandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 catID
        {
            get
            {
                return _catID;
            }
            set
            {
                OncatIDChanging(value);
                ReportPropertyChanging("catID");
                _catID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("catID");
                OncatIDChanged();
            }
        }
        private global::System.Int32 _catID;
        partial void OncatIDChanging(global::System.Int32 value);
        partial void OncatIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "StoreItem", "Store")]
        public ItemCategory Store
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.StoreItem", "Store").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.StoreItem", "Store").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemCategory> StoreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.StoreItem", "Store");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemCategory>("Model1.StoreItem", "Store", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ServiceItem", "Service")]
        public EntityCollection<Position> Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Position>("Model1.ServiceItem", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Position>("Model1.ServiceItem", "Service", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="ItemCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemCategory object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static ItemCategory CreateItemCategory(global::System.String name, global::System.Int32 id)
        {
            ItemCategory itemCategory = new ItemCategory();
            itemCategory.name = name;
            itemCategory.id = id;
            return itemCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "StoreItem", "Item")]
        public EntityCollection<Item> Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("Model1.StoreItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("Model1.StoreItem", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ItemCategoryItemParameter", "ItemParameter")]
        public EntityCollection<ItemParameter> ItemParameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemParameter>("Model1.ItemCategoryItemParameter", "ItemParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemParameter>("Model1.ItemCategoryItemParameter", "ItemParameter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="ItemParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemParameter object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="valueDbl">Initial value of the valueDbl property.</param>
        /// <param name="valueBool">Initial value of the valueBool property.</param>
        /// <param name="valueTxt">Initial value of the valueTxt property.</param>
        /// <param name="catID">Initial value of the catID property.</param>
        public static ItemParameter CreateItemParameter(global::System.Int32 id, global::System.Double valueDbl, global::System.Boolean valueBool, global::System.String valueTxt, global::System.Int32 catID)
        {
            ItemParameter itemParameter = new ItemParameter();
            itemParameter.id = id;
            itemParameter.valueDbl = valueDbl;
            itemParameter.valueBool = valueBool;
            itemParameter.valueTxt = valueTxt;
            itemParameter.catID = catID;
            return itemParameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double valueDbl
        {
            get
            {
                return _valueDbl;
            }
            set
            {
                OnvalueDblChanging(value);
                ReportPropertyChanging("valueDbl");
                _valueDbl = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("valueDbl");
                OnvalueDblChanged();
            }
        }
        private global::System.Double _valueDbl;
        partial void OnvalueDblChanging(global::System.Double value);
        partial void OnvalueDblChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean valueBool
        {
            get
            {
                return _valueBool;
            }
            set
            {
                OnvalueBoolChanging(value);
                ReportPropertyChanging("valueBool");
                _valueBool = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("valueBool");
                OnvalueBoolChanged();
            }
        }
        private global::System.Boolean _valueBool;
        partial void OnvalueBoolChanging(global::System.Boolean value);
        partial void OnvalueBoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String valueTxt
        {
            get
            {
                return _valueTxt;
            }
            set
            {
                OnvalueTxtChanging(value);
                ReportPropertyChanging("valueTxt");
                _valueTxt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("valueTxt");
                OnvalueTxtChanged();
            }
        }
        private global::System.String _valueTxt;
        partial void OnvalueTxtChanging(global::System.String value);
        partial void OnvalueTxtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 catID
        {
            get
            {
                return _catID;
            }
            set
            {
                OncatIDChanging(value);
                ReportPropertyChanging("catID");
                _catID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("catID");
                OncatIDChanged();
            }
        }
        private global::System.Int32 _catID;
        partial void OncatIDChanging(global::System.Int32 value);
        partial void OncatIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ItemCategoryItemParameter", "ItemCategory")]
        public ItemCategory ItemCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.ItemCategoryItemParameter", "ItemCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.ItemCategoryItemParameter", "ItemCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemCategory> ItemCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("Model1.ItemCategoryItemParameter", "ItemCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemCategory>("Model1.ItemCategoryItemParameter", "ItemCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="status">Initial value of the status property.</param>
        /// <param name="consID">Initial value of the consID property.</param>
        /// <param name="emplID">Initial value of the emplID property.</param>
        public static Order CreateOrder(global::System.Int32 id, global::System.String date, global::System.String status, global::System.Int32 consID, global::System.Int32 emplID)
        {
            Order order = new Order();
            order.id = id;
            order.date = date;
            order.status = status;
            order.consID = consID;
            order.emplID = emplID;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.String _date;
        partial void OndateChanging(global::System.String value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 consID
        {
            get
            {
                return _consID;
            }
            set
            {
                OnconsIDChanging(value);
                ReportPropertyChanging("consID");
                _consID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("consID");
                OnconsIDChanged();
            }
        }
        private global::System.Int32 _consID;
        partial void OnconsIDChanging(global::System.Int32 value);
        partial void OnconsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 emplID
        {
            get
            {
                return _emplID;
            }
            set
            {
                OnemplIDChanging(value);
                ReportPropertyChanging("emplID");
                _emplID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("emplID");
                OnemplIDChanged();
            }
        }
        private global::System.Int32 _emplID;
        partial void OnemplIDChanging(global::System.Int32 value);
        partial void OnemplIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ConsumerOrder", "Consumer")]
        public Consumer Consumer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Consumer> ConsumerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Consumer>("Model1.ConsumerOrder", "Consumer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "EmployeeOrder", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Model1.EmployeeOrder", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Model1.EmployeeOrder", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("Model1.EmployeeOrder", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("Model1.EmployeeOrder", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderService", "Service")]
        public EntityCollection<Position> Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Position>("Model1.OrderService", "Service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Position>("Model1.OrderService", "Service", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="orderID">Initial value of the orderID property.</param>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="count">Initial value of the count property.</param>
        /// <param name="itemID">Initial value of the itemID property.</param>
        public static Position CreatePosition(global::System.Int32 orderID, global::System.Int32 id, global::System.Int32 count, global::System.Int32 itemID)
        {
            Position position = new Position();
            position.orderID = orderID;
            position.id = id;
            position.count = count;
            position.itemID = itemID;
            return position;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 orderID
        {
            get
            {
                return _orderID;
            }
            set
            {
                OnorderIDChanging(value);
                ReportPropertyChanging("orderID");
                _orderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orderID");
                OnorderIDChanged();
            }
        }
        private global::System.Int32 _orderID;
        partial void OnorderIDChanging(global::System.Int32 value);
        partial void OnorderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private global::System.Int32 _count;
        partial void OncountChanging(global::System.Int32 value);
        partial void OncountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itemID
        {
            get
            {
                return _itemID;
            }
            set
            {
                OnitemIDChanging(value);
                ReportPropertyChanging("itemID");
                _itemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itemID");
                OnitemIDChanged();
            }
        }
        private global::System.Int32 _itemID;
        partial void OnitemIDChanging(global::System.Int32 value);
        partial void OnitemIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "OrderService", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderService", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderService", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("Model1.OrderService", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("Model1.OrderService", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ServiceItem", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Model1.ServiceItem", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Model1.ServiceItem", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Model1.ServiceItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("Model1.ServiceItem", "Item", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
